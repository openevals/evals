"""Initial revision

Revision ID: c35b77824d7b
Revises: 
Create Date: 2024-08-04 12:19:21.842047

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c35b77824d7b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "evals",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("system_prompt", sa.String(), nullable=True),
        sa.Column(
            "validator_type",
            sa.Enum("ExactMatch", "FuzzyMatch", "ModelGraded", name="validatortype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "models",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("model_developer", sa.String(), nullable=False),
        sa.Column("model_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("affiliation", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "eval_runs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("score", sa.Float(), nullable=False),
        sa.Column(
            "validator_type",
            sa.Enum("ExactMatch", "FuzzyMatch", "ModelGraded", name="validatortype"),
            nullable=False,
        ),
        sa.Column("eval_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["eval_id"],
            ["evals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_instances",
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("input", sa.String(), nullable=False),
        sa.Column("system_prompt", sa.String(), nullable=True),
        sa.Column("user_prompt", sa.String(), nullable=True),
        sa.Column("ideal", sa.String(), nullable=False),
        sa.Column("eval_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["eval_id"],
            ["evals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task_instances")
    op.drop_table("eval_runs")
    op.drop_table("users")
    op.drop_table("models")
    op.drop_table("evals")
    # ### end Alembic commands ###
